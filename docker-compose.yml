version: "3.5"

services:
  docker_php:
    container_name: docker_php
    build:
      context: ./php
      dockerfile: Dockerfile
      args:
        - LNMP_PHP_VERSION=${PHP_VERSION}
        - PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2}
        - INSTALL_GD=${PHP_FPM_INSTALL_GD}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
        - INSTALL_GNUPG=${PHP_FPM_INSTALL_GNUPG}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OCI8=${PHP_FPM_INSTALL_OCI8}
        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
        - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
        - INSTALL_XLSWRITER=${PHP_FPM_INSTALL_XLSWRITER}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
        - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
        - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}
        - INSTALL_GEARMAN=${PHP_FPM_INSTALL_GEARMAN}
        - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}
        - INSTALL_FFMPEG=${PHP_FPM_INSTALL_FFMPEG}
        - INSTALL_AUDIOWAVEFORM=${PHP_FPM_INSTALL_AUDIOWAVEFORM}
        - INSTALL_REDIS=${PHP_FPM_INSTALL_REDIS}
        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
        - INSTALL_XMLRPC=${PHP_FPM_INSTALL_XMLRPC}
        - INSTALL_SSDB=${PHP_FPM_INSTALL_SSDB}
        - INSTALL_EVENT=${PHP_FPM_INSTALL_EVENT}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
        - IMAGEMAGICK_VERSION=${PHP_FPM_IMAGEMAGICK_VERSION}
        - TZ=${TIMEZONE}
        - http_proxy
        - https_proxy
        - no_proxy
    tty: true
    restart: always
    expose:
      - "9000"
    ports:
      - "127.0.0.1:9000:9000"
    working_dir: ${APP_CODE_PATH_CONTAINER}
    volumes:
      - ${DATA_PATH_HOST}/php/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${DATA_PATH_HOST}/php/logs:/var/log/php-fpm
      - ${DATA_PATH_HOST}/php/php-fpm.d:/usr/local/etc/php-fpm.d
      - php-fpm:/var/run/php-fpm
      - mysqld:/var/run/mysqld
    depends_on:
      - docker_mysql
      - docker_redis
      - docker_mongo
    links:
      - docker_mysql:docker_mysql
      - docker_redis:docker_redis
      - docker_mongo:docker_mongo
  docker_php_worker:
    container_name: docker_php_worker
    build:
      context: ./php-worker
      dockerfile: Dockerfile
      args:
        - LNMP_PHP_VERSION=${PHP_VERSION}
        - PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_BZ2=${PHP_WORKER_INSTALL_BZ2}
        - INSTALL_GD=${PHP_WORKER_INSTALL_GD}
        - INSTALL_IMAGEMAGICK=${PHP_WORKER_INSTALL_IMAGEMAGICK}
        - INSTALL_GMP=${PHP_WORKER_INSTALL_GMP}
        - INSTALL_GNUPG=${PHP_WORKER_INSTALL_GNUPG}
        - INSTALL_LDAP=${PHP_WORKER_INSTALL_LDAP}
        - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}
        - INSTALL_MONGO=${PHP_WORKER_INSTALL_MONGO}
        - INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}
        - INSTALL_MEMCACHED=${PHP_WORKER_INSTALL_MEMCACHED}
        - INSTALL_OCI8=${PHP_WORKER_INSTALL_OCI8}
        - INSTALL_MSSQL=${PHP_WORKER_INSTALL_MSSQL}
        - INSTALL_PHALCON=${PHP_WORKER_INSTALL_PHALCON}
        - INSTALL_XLSWRITER=${PHP_WORKER_INSTALL_XLSWRITER}
        - INSTALL_SOAP=${PHP_WORKER_INSTALL_SOAP}
        - INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}
        - INSTALL_MYSQL_CLIENT=${PHP_WORKER_INSTALL_MYSQL_CLIENT}
        - INSTALL_AMQP=${PHP_WORKER_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${PHP_WORKER_INSTALL_CASSANDRA}
        - INSTALL_GEARMAN=${PHP_WORKER_INSTALL_GEARMAN}
        - INSTALL_GHOSTSCRIPT=${PHP_WORKER_INSTALL_GHOSTSCRIPT}
        - INSTALL_SWOOLE=${PHP_WORKER_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_WORKER_INSTALL_TAINT}
        - INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}
        - INSTALL_AUDIOWAVEFORM=${PHP_WORKER_INSTALL_AUDIOWAVEFORM}
        - INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}
        - INSTALL_IMAP=${PHP_WORKER_INSTALL_IMAP}
        - INSTALL_XMLRPC=${PHP_WORKER_INSTALL_XMLRPC}
        - INSTALL_SSDB=${PHP_WORKER_INSTALL_SSDB}
        - INSTALL_EVENT=${PHP_WORKER_INSTALL_EVENT}
        - PUID=${PHP_WORKER_PUID}
        - PGID=${PHP_WORKER_PGID}
        - IMAGEMAGICK_VERSION=${PHP_WORKER_IMAGEMAGICK_VERSION}
        - TZ=${TIMEZONE}
        - http_proxy
        - https_proxy
        - no_proxy
    tty: true
    restart: always
    working_dir: ${APP_CODE_PATH_CONTAINER}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${DATA_PATH_HOST}/php-worker/supervisord.d:/etc/supervisord.d
      - mysqld:/var/run/mysqld
    depends_on:
      - docker_mysql
      - docker_redis
      - docker_mongo
    links:
      - docker_mysql:docker_mysql
      - docker_redis:docker_redis
      - docker_mongo:docker_mongo
  docker_nginx:
    container_name: docker_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - PUID=${NGINX_PUID}
        - PGID=${NGINX_PGID}
        - http_proxy
        - https_proxy
        - no_proxy
    tty: true
    restart: always
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    working_dir: ${APP_CODE_PATH_CONTAINER}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      - php-fpm:/var/run/php-fpm
    depends_on:
      - docker_php
      - docker_laravel_echo_server
    links:
      - docker_php:docker_php
      - docker_laravel_echo_server:docker_laravel_echo_server
  docker_mysql:
    container_name: docker_mysql
    build:
        context: ./mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
    tty: true
    restart: always
    expose:
      - "3306"
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${DATA_PATH_HOST}/mysql/logs:/logs
      - ${DATA_PATH_HOST}/mysql/data:/var/lib/mysql
      - mysqld:/var/run/mysqld
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
  docker_redis:
    container_name: docker_redis
    build: ./redis
    tty: true
    restart: always
    expose:
      - "6379"
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${DATA_PATH_HOST}/redis/data:/data
    command: --requirepass ${REDIS_PASSWORD}
  docker_mongo:
    container_name: docker_mongo
    build: ./mongod
    tty: true
    restart: always
    expose:
      - "27017"
    ports:
      - "${MONGODB_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - ${DATA_PATH_HOST}/mongod/db:/data/db
      - ${DATA_PATH_HOST}/mongod/configdb:/data/configdb
  docker_laravel_echo_server:
    container_name: docker_laravel_echo_server
    build:
      context: ./laravel-echo-server
      dockerfile: Dockerfile
    tty: true
    restart: always
    volumes:
      - ${DATA_PATH_HOST}/laravel-echo-server/laravel-echo-server.json:/usr/src/app/laravel-echo-server.json:ro
    ports:
      - "${LARAVEL_ECHO_SERVER_PORT}:6001"
    depends_on:
      - docker_redis
    links:
      - docker_redis:docker_redis
  docker_emqx:
    container_name: docker_emqx
    build:
      context: ./emqx
      dockerfile: Dockerfile
    tty: true
    restart: always
    ports:
      - "${EMQX_MQTT_PORT}:1883"
      - "${EMQX_MQTTS_PORT}:8883"
      - "${EMQX_WS_PORT}:8083"
      - "${EMQX_WSS_PORT}:8084"
      - "${EMQX_DAPI_PORT}:18083"
      - "127.0.0.1:11883:11883"
      - "127.0.0.1:4370:4370"
      - "127.0.0.1:5369:5369"
    environment:
      - HOCON_ENV_OVERRIDE_PREFIX=EMQX_
      - EMQX_NAME=${EMQX_NAME}
      - EMQX_HOST=${EMQX_HOST}
      - EMQX_NODE__COOKIE=${EMQX_NODE_COOKIE}
    volumes:
      - ${DATA_PATH_HOST}/emqx/data:/opt/emqx/data
      - ${DATA_PATH_HOST}/emqx/log:/opt/emqx/log
volumes:
  php-fpm:
    driver: ${VOLUMES_DRIVER}
  mysqld:
    driver: ${VOLUMES_DRIVER}